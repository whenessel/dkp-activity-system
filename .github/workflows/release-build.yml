name: "Release build"

on:
  push:
    tags:
      - "*.*.*"

jobs:
  release-branch:
    name: "Create release branch"
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.tag }}
      branch: ${{ steps.release.outputs.branch }}
    permissions:
      contents: write
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Update release branch"
        id: release
        run: |
          TAG_REF=${{ github.ref }}
          TAG_NAME=${TAG_REF:10} # Extract tag name from the ref string
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

          BRANCH_VERSION=${TAG_NAME:0:10} # Extract version without the patch level
          BRANCH_NAME="releases/$BRANCH_VERSION"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

          echo "Detected tag: $TAG_NAME"
          echo "Checking for existing branch: $BRANCH_NAME"

          # Check if the branch exists in the remote repository
          BRANCH_EXISTS=$(git ls-remote --heads origin $BRANCH_NAME)

          if [[ -z "$BRANCH_EXISTS" ]]; then
            echo "Creating new branch: $BRANCH_NAME"
            git checkout -b $BRANCH_NAME
          else
            echo "Switching to existing branch: $BRANCH_NAME"
            git checkout $BRANCH_NAME
          fi

          # Reset the branch to point at the tag's commit
          echo "Resetting branch $BRANCH_NAME to commit of tag $TAG_NAME"
          git reset --hard $TAG_NAME
          git push -u origin $BRANCH_NAME --force
  docker-build:
    name: "Docker Build"
    runs-on: ubuntu-latest
    needs: release-branch
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-branch.outputs.branch }}
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "Login to DockerHub Container Registry"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Build and Push Image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: compose/Dockerfile
          platforms: linux/amd64, linux/arm64
          tags: docker.io/whenessel/dkp-activity-system:${{ needs.release-branch.outputs.tag }}
          push: true
          cache-from: type=registry,ref=docker.io/whenessel/dkp-activity-system:${{ needs.release-branch.outputs.tag }}
      - name: "Tag Edge"
        run: docker buildx imagetools create --tag whenessel/dkp-activity-system:edge whenessel/dkp-activity-system:${{ needs.release-branch.outputs.tag }}
  create-pre-release:
    name: "Create Pre Release"
    runs-on: ubuntu-latest
    needs: [release-branch, docker-build]
    steps:
      - name: "Create Pre Release"
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.release-branch.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
