import logging
import platform
import typing as t

import discord
from discord.ext import commands
from discord.mentions import AllowedMentions

if t.TYPE_CHECKING:
    from evebot.bot import EveBot, EveContext


logger = logging.getLogger(__name__)


class CommonCog(commands.Cog):
    def __init__(self, bot: "EveBot"):
        self.bot: "EveBot" = bot

    @commands.hybrid_command(
        name="botinfo", description="–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", with_app_command=False
    )
    async def botinfo(self, ctx: "EveContext") -> None:
        embed = discord.Embed(
            color=discord.Colour.gold(),
            description="–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –î–ö–ü —Å–∏—Å—Ç–µ–º—ã",
        )
        embed.set_author(name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü:", value="Aliace#2031", inline=True)
        embed.add_field(
            name="Python Version:", value=f"{platform.python_version()}", inline=True
        )

        embed.add_field(
            name="–ü—Ä–µ—Ñ–∏–∫—Å:",
            value=f"/ –¥–ª—è –∫–æ–º–∞–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ "
            f"{self.bot.prefix} –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥.",
            inline=False,
        )

        admins = []
        for owner_id in ctx.bot.owner_ids:
            member = ctx.guild.get_member(owner_id)
            if member:
                admins.append(member)
        embed.add_field(
            name="–ê–¥–º–∏–Ω—ã:",
            value=f"{' '.join([admin.mention for admin in admins])}",
            inline=False,
        )
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å–∏–ª {ctx.author}")
        await ctx.send(embed=embed, mention_author=False, reference=ctx.message)

    @commands.hybrid_command(
        name="ping", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞", with_app_command=False
    )
    async def ping(self, ctx: "EveContext") -> None:
        embed = discord.Embed(
            color=discord.Colour.gold(),
            title="üèì Pong!",
            description=f"–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ {round(self.bot.latency * 1000)}ms.",
        )
        await ctx.send(embed=embed, mention_author=False, reference=ctx.message)


async def setup(bot):
    await bot.add_cog(CommonCog(bot))
