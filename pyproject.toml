[tool.bumpversion]
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
tag = false
sign_tags = false
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
current_version = "2024.1.11"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = [
    "{major}.{minor}.{patch}"
]
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"


[tool.poetry]
name = "dkp-activity-system"
version = "2024.1.11"
description = "DKP Activity System with Dicord integration"
license = "MIT"
authors = ["Artem Demidenko <ar.demidenko@appsurify.com>"]
maintainers = ["Artem Demidenko <ar.demidenko@appsurify.com>"]
readme = "README.md"
homepage = "https://github.com/whenessel/dkp-activity-system"
repository = "https://github.com/whenessel/dkp-activity-system"
keywords = ["DKP", "DiscordBot", "Lineage2M"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]


[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.1"
django-environ = "^0.11.2"
psycopg2-binary = "^2.9.9"
discord-py = "^2.3.2"
ipython = "^8.20.0"
lru-dict = "^1.3.0"
parsedatetime = "^2.6"
python-dateutil = "^2.8.2"
aiohttp = "^3.9.1"
enum-properties = "^1.7.0"
django-import-export = "^3.3.6"
pydantic = "^2.5.3"
requests = "^2.31.0"
certifi = "^2023.11.17"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-subprocess = "^1.5.0"
requests-mock = "^1.11.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.13"
bump-my-version = "^0.16.2"
black = "^23.12.1"
flake8 = "^7.0.0"
flake8-pyproject = "^1.2.3"
isort = "^5.13.2"
mypy = "^1.8.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--verbose" #  "-rA"
pythonpath = "./src/"
testpaths = ["./tests/"]


[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
src_paths = ["isort", "test", "src"]

[tool.flake8]
max-line-length = 88
exclude = [".git", "__pycache__", ".pytest_cache"]
extend-ignore = ["E203" ,"F401", "F403"]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E", "F"]
ignore = ["E203" ,"F401", "F403"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
